@page "/brainanatomy"
@inject IJSRuntime JSRuntime
@using Microsoft.JSInterop
@using System.Text.Json.Serialization

<div class="container">
    <div class="row">
        <div class="col-8">
            <div class="v3d">
                <canvas id="threeCanvas"></canvas>
            </div>
        </div>
        <div class="col-4">
            <div class="side-panel">
                @if (SelectedPoint != null)
                {
                    <h3>@SelectedPoint.Place</h3>
                    <p>@SelectedPoint.Description</p>
                }
                else
                {
                    <p>Click a point on the eye model to view details.</p>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private ModelPoint? SelectedPoint;

    // Path to the eye.glb model
    private string ModelPath => "models/human_brain.glb";

    // Define 10 points for the eye model
    // Define maximum practical points for the brain model (15 key anatomical regions)
    private List<ModelPoint> ModelPoints => new()
    {
        new ModelPoint
        {
            Place = "Frontal Lobe",
            Description = "Frontal Lobe: Responsible for decision-making, problem-solving, and planning.",
            Id = "point1",
            Position = new float[] { 0.2f, 0.3f, 0.1f }
        },
        new ModelPoint
        {
            Place = "Parietal Lobe",
            Description = "Parietal Lobe: Processes sensory information like touch and spatial awareness.",
            Id = "point2",
            Position = new float[] { 0.0f, 0.2f, 0.1f }
        },
        new ModelPoint
        {
            Place = "Temporal Lobe",
            Description = "Temporal Lobe: Involved in memory, language, and auditory processing.",
            Id = "point3",
            Position = new float[] { -0.2f, 0.1f, 0.1f }
        },
        new ModelPoint
        {
            Place = "Occipital Lobe",
            Description = "Occipital Lobe: Primary visual processing center of the brain.",
            Id = "point4",
            Position = new float[] { 0.0f, 0.0f, -0.2f }
        },
        new ModelPoint
        {
            Place = "Cerebellum",
            Description = "Cerebellum: Coordinates movement, balance, and posture.",
            Id = "point5",
            Position = new float[] { 0.0f, -0.2f, 0.0f }
        },
        new ModelPoint
        {
            Place = "Brainstem",
            Description = "Brainstem: Controls basic life functions like heart rate and breathing.",
            Id = "point6",
            Position = new float[] { 0.0f, -0.3f, 0.0f }
        },
        new ModelPoint
        {
            Place = "Thalamus",
            Description = "Thalamus: Relay station for sensory and motor signals.",
            Id = "point7",
            Position = new float[] { 0.1f, 0.0f, 0.0f }
        },
        new ModelPoint
        {
            Place = "Hypothalamus",
            Description = "Hypothalamus: Regulates hormones, body temperature, and hunger.",
            Id = "point8",
            Position = new float[] { 0.0f, 0.1f, -0.1f }
        },
        new ModelPoint
        {
            Place = "Pons",
            Description = "Pons: Connects brain regions and assists in breathing regulation.",
            Id = "point9",
            Position = new float[] { 0.1f, -0.2f, 0.0f }
        },
        new ModelPoint
        {
            Place = "Medulla Oblongata",
            Description = "Medulla Oblongata: Controls autonomic functions like heartbeat.",
            Id = "point10",
            Position = new float[] { -0.1f, -0.3f, 0.0f }
        },
        new ModelPoint
        {
            Place = "Corpus Callosum",
            Description = "Corpus Callosum: Connects the left and right hemispheres.",
            Id = "point11",
            Position = new float[] { 0.0f, 0.2f, -0.1f }
        },
        new ModelPoint
        {
            Place = "Hippocampus",
            Description = "Hippocampus: Critical for memory formation and spatial navigation.",
            Id = "point12",
            Position = new float[] { -0.2f, 0.0f, 0.0f }
        },
        new ModelPoint
        {
            Place = "Amygdala",
            Description = "Amygdala: Processes emotions like fear and pleasure.",
            Id = "point13",
            Position = new float[] { -0.1f, 0.1f, 0.0f }
        },
        new ModelPoint
        {
            Place = "Pituitary Gland",
            Description = "Pituitary Gland: Regulates various hormones in the body.",
            Id = "point14",
            Position = new float[] { 0.0f, 0.0f, -0.1f }
        },
        new ModelPoint
        {
            Place = "Basal Ganglia",
            Description = "Basal Ganglia: Involved in coordinating movement and reward processing.",
            Id = "point15",
            Position = new float[] { 0.2f, 0.0f, 0.0f }
        }
    };


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Initialize Three.js with the model path and points
            await JSRuntime.InvokeVoidAsync("initThreeJs", "threeCanvas", ModelPath, ModelPoints);
            // Register the callback for point clicks
            await JSRuntime.InvokeVoidAsync("registerClickCallback", DotNetObjectReference.Create(this));
        }
    }

    [JSInvokable]
    public void OnPointClicked(string pointId)
    {
        // Update the selected point and refresh the UI
        SelectedPoint = ModelPoints.FirstOrDefault(p => p.Id == pointId);
        StateHasChanged();
    }

    public class ModelPoint
    {
        [JsonPropertyName("place")]
        public string Place { get; set; } = string.Empty;

        [JsonPropertyName("description")]
        public string Description { get; set; } = string.Empty;

        [JsonPropertyName("id")]
        public string Id { get; set; } = string.Empty;

        [JsonPropertyName("position")]
        public float[] Position { get; set; } = Array.Empty<float>();
    }
}